syntax = "proto3";

package tests.harness.cases;
option go_package = "cases";

import "tests/harness/cases/other_package/embed.proto";

import "validate/validate.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";

message Embed { int64 val = 1 [(validate.rules).int64.gt = 0]; }
enum AnEnum {
  X = 0;
  Y = 1;
}

message RepeatedNone      { repeated int64 val = 1; }
message RepeatedEmbedNone { repeated Embed val = 1; google.protobuf.FieldMask update_mask = 2; }
message RepeatedEmbedCrossPackageNone { repeated tests.harness.cases.other_package.Embed val = 1; google.protobuf.FieldMask update_mask = 2; }
message RepeatedMin       { repeated Embed val = 1 [(validate.rules).repeated.min_items = 2]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedMax       { repeated double val = 1 [(validate.rules).repeated.max_items = 3]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedMinMax    { repeated sfixed32 val = 1 [(validate.rules).repeated = {min_items: 2, max_items: 4}]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedExact     { repeated uint32 val = 1 [(validate.rules).repeated = {min_items: 3, max_items: 3}]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedUnique    { repeated string val = 1 [(validate.rules).repeated.unique = true]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedItemRule  { repeated float val = 1 [(validate.rules).repeated.items.float.gt = 0]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedItemPattern  { repeated string val = 1 [(validate.rules).repeated.items.string.pattern = "(?i)^[a-z0-9]+$"]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedEmbedSkip { repeated Embed val = 1 [(validate.rules).repeated.items.message.skip = true]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedItemIn { repeated string val = 1 [(validate.rules).repeated.items.string = {in: ["foo", "bar"]}]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedItemNotIn { repeated string val = 1 [(validate.rules).repeated.items.string = {not_in: ["foo", "bar"]}]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedEnumIn { repeated AnEnum val = 1 [(validate.rules).repeated.items.enum = {in: [0]}]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedEnumNotIn { repeated AnEnum val = 1 [(validate.rules).repeated.items.enum = {not_in: [0]}]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedMinAndItemLen { repeated string val = 1 [(validate.rules).repeated = { items { string { len: 3 } }, min_items: 1 }]; google.protobuf.FieldMask update_mask = 2; }
message RepeatedDuration { repeated google.protobuf.Duration val = 1 [(validate.rules).repeated = { items { duration { gte { nanos: 1000000}}}}]; google.protobuf.FieldMask update_mask = 2; }
